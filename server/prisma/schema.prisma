generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int                 @id @default(autoincrement())
  title      String
  content    String
  authorId   Int
  createdAt  DateTime            @default(now())
  published  Boolean             @default(true)
  updatedAt  DateTime            @updatedAt
  author     User                @relation(fields: [authorId], references: [id])
  categories CategoriesOnPosts[]
  comments   Comment[]
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int
  createdAt DateTime @default(now())
  published Boolean  @default(true)
  updatedAt DateTime @updatedAt
  content   String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  assignedAt DateTime @default(now())

  @@id([postId, categoryId])
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  nameEN    String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  profile   Profile?
  Comment   Comment[]
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  createdAt DateTime @default(now())
  bio       String
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
